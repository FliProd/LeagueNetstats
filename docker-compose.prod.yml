version: '3.7'

services:
  web:
    image: nhampp/leaguestats:ssl_letsencrypt
    container_name: leaguestats-prod
    build:
      context: ./LeagueStats
      dockerfile: Dockerfile.prod
    command: gunicorn LeagueStats.wsgi:application --bind 0.0.0.0:8000
    volumes:
      - static_volume:/home/LeagueStats/web/static
    expose:
      - 8000
    env_file:
      - ./.env.prod
    depends_on:
      - db
  prometheus:
    image: prom/prometheus
    container_name: prometheus
    volumes:
      - ./prometheus/:/etc/prometheus/
    ports:
      - 9090:9090
    command: --config.file=/etc/prometheus/prometheus.yml  --web.external-url=https://league-netstats.ethz.ch/prometheus  --web.route-prefix="/prometheus" --log.level=debug
  grafana:
    image: grafana/grafana
    ports:
      - 3060:3000
  alertmanager:
    container_name: alertmanager
    image: prom/alertmanager
    volumes:
      - ./prometheus:/etc/prometheus
      - ./data/alermanager:/data
    command:
      - '--config.file=/etc/prometheus/alert_manager/alertmanager.yml'
      - '--storage.path=/data'
    ports:
      - 9093:9093
  db:
    image: postgres:12.0-alpine
    container_name: db-prod
    volumes:
      - postgres_data:/var/lib/postgresql/data/
    ports:
      - 5432:5432
    env_file:
      - ./.env.prod.db
  postgres-backup:
    image: prodrigestivill/postgres-backup-local
    restart: always
    user: postgres
    volumes:
      - /var/opt/pgbackups:/backups
    ports:
      - 8080:8080
    depends_on:
      - db
    env_file:
      - ./.env.prod.db
    environment:
      - POSTGRES_EXTRA_OPTS=-Z6 --schema=public --blobs
      - SCHEDULE=@daily
      - BACKUP_KEEP_DAYS=7
      - BACKUP_KEEP_WEEKS=4
      - BACKUP_KEEP_MONTHS=6
      - HEALTHCHECK_PORT=8080
  nginx-proxy:
    image: nhampp/nginx-proxy:ssl_letsencrypt
    container_name: nginx-proxy
    build: ./nginx
    restart: always
    volumes:
      - static_volume:/home/LeagueStats/web/static
      - certs:/etc/nginx/certs
      - html:/usr/share/nginx/html
      - vhost:/etc/nginx/vhost.d
      - /var/run/docker.sock:/tmp/docker.sock:ro
    ports:
      - 443:443
      - 80:80
    depends_on:
      - web
  nginx-proxy-letsencrypt:
    image: jrcs/letsencrypt-nginx-proxy-companion
    env_file:
      - .env.prod.proxy-companion
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - certs:/etc/nginx/certs
      - html:/usr/share/nginx/html
      - vhost:/etc/nginx/vhost.d
    depends_on:
      - nginx-proxy

volumes:
  postgres_data:
  static_volume:
  media_volume:
  certs:
  html:
  vhost: